clc; clear; close all;
x = 0:0.1:20;
y = zeros(size(x));
y(90:110) = 1;  
y = y + 0.01 * randn(size(y));
c = exp(-(0:length(y)-1) ./ 150); 
yc = conv(y, c, 'full') ./ sum(c);
ydc = deconv(yc, c) .* sum(c);
subplot(221); plot(x, y); title('Original y'); 
subplot(222); plot(0:length(c)-1, c); title('c'); 
subplot(223); plot(x, yc(1:length(y))); title('yc');  
subplot(224); plot(x, ydc(1:length(y))); title('Recovered y'); 

%%

clc; clear; clf;
increment = 0.01;
cw = 2;
dw = 2.01;
SmoothWidth = 4;

x = 0:increment:20;
y = zeros(size(x));
y(900:1300) = 1.3;

y = y + 0.01 .* randn(size(y));

c = gaussian(x, 0, cw) + gaussian(x, max(x), cw);
c2 = gaussian(x, 0, dw) + gaussian(x, max(x), dw);

yc = ifft(fft(y) .* fft(c)) ./ sum(c);
yc = yc + 0.00000001 .* randn(size(yc));

ydc = ifft(fft(yc) ./ fft(c2)) .* sum(c2);
% ydc=deconvgauss(x,yc,w);

subplot(2,2,1); plot(x, y); title('Original y');
subplot(2,2,2); plot(x, yc(1:length(x))); title(['yc = y convoluted with c. Width = ' num2str(cw)]);
subplot(2,2,3); plot(x, ydc(1:length(x))); title(['ydc = recovered y. Width = ' num2str(dw)]);
subplot(2,2,4); plot(x, fastsmooth(ydc(1:length(x)), SmoothWidth, 3)); title('Smoothed recovered y');

% Define the Gaussian function
function g = gaussian(x, mean, width)
    g = exp(-((x - mean) .^ 2) / (2 * width^2));
end
