clc; clear;

% Define Frequency Response
x = 0:127;
x = x / 1024;
y = -16*x + 3;
t = 0:127;
F = [y, zeros(1, 129), ones(1, 128), sin(2*pi*0.017*t) + 1];

N = 1024;

% Inverse FFT to obtain impulse response
h = ifft(F, N, 'symmetric');

% Shift impulse response to center
h_shifted = fftshift(h);

% Define M values
M_values2 = [40, 100];
M_values1 = [300, 1000];

figure;
for i = 1:length(M_values1)
    M = M_values1(i);
    mid = N/2 + 1;
    
    % Truncate Impulse Response
    h_truncated = h_shifted(mid - floor(M/2) : mid + floor(M/2));
    
    % Apply Windowing
    window = hamming(M+1)';
    h_windowed = h_truncated .* window;
    
    % Compute Frequency Response
    H = fft(h_windowed, N);
    H_magnitude = abs(H(1:N/2+1));

    % Plot Impulse Response
    subplot(2, length(M_values1), i);
    stem(h_windowed, 'filled');
    title(['Filter Kernel (M=', num2str(M), ')']);
    xlabel('Samples');
    ylabel('Amplitude');

    % Plot Frequency Response
    subplot(2, length(M_values1), i + length(M_values1));
    plot(linspace(0, 0.5, N/2+1), H_magnitude);
    title(['Frequency Response (M=', num2str(M), ')']);
    xlabel('Normalized Frequency');
    ylabel('Magnitude');
end
